/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;
using Newtonsoft.Json;
using JsonConstructorAttribute = Newtonsoft.Json.JsonConstructorAttribute;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     EmailDomainIpPoolAssignApiRequest
    /// </summary>
    [DataContract(Name = "EmailDomainIpPoolAssignApiRequest")]
    [JsonObject]
    public class EmailDomainIpPoolAssignApiRequest : IEquatable<EmailDomainIpPoolAssignApiRequest>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailDomainIpPoolAssignApiRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EmailDomainIpPoolAssignApiRequest()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailDomainIpPoolAssignApiRequest" /> class.
        /// </summary>
        /// <param name="poolId">IP pool identifier. (required).</param>
        /// <param name="priority">IP pool sending priority. (required).</param>
        public EmailDomainIpPoolAssignApiRequest(string poolId = default, int priority = default)
        {
            // to ensure "poolId" is required (not null)
            PoolId = poolId ?? throw new ArgumentNullException("poolId");
            Priority = priority;
        }

        /// <summary>
        ///     IP pool identifier.
        /// </summary>
        /// <value>IP pool identifier.</value>
        [DataMember(Name = "poolId", IsRequired = true, EmitDefaultValue = true)]
        [JsonProperty(PropertyName = "poolId", Required = Required.DisallowNull,
            DefaultValueHandling = DefaultValueHandling.Include)]
        [JsonPropertyName("poolId")]
        public string PoolId { get; set; }

        /// <summary>
        ///     IP pool sending priority.
        /// </summary>
        /// <value>IP pool sending priority.</value>
        [DataMember(Name = "priority", IsRequired = true, EmitDefaultValue = true)]
        [JsonProperty(PropertyName = "priority", Required = Required.DisallowNull,
            DefaultValueHandling = DefaultValueHandling.Include)]
        [JsonPropertyName("priority")]
        public int Priority { get; set; }

        /// <summary>
        ///     Returns true if EmailDomainIpPoolAssignApiRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailDomainIpPoolAssignApiRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailDomainIpPoolAssignApiRequest input)
        {
            if (input == null)
                return false;

            return
                (
                    PoolId == input.PoolId ||
                    (PoolId != null &&
                     PoolId.Equals(input.PoolId))
                ) &&
                (
                    Priority == input.Priority ||
                    Priority.Equals(input.Priority)
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailDomainIpPoolAssignApiRequest {\n");
            sb.Append("  PoolId: ").Append(PoolId).Append("\n");
            sb.Append("  Priority: ").Append(Priority).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as EmailDomainIpPoolAssignApiRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (PoolId != null)
                    hashCode = hashCode * 59 + PoolId.GetHashCode();
                hashCode = hashCode * 59 + Priority.GetHashCode();
                return hashCode;
            }
        }
    }
}