/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     EmailAllDomainsResponse
    /// </summary>
    [DataContract(Name = "EmailAllDomainsResponse")]
    [JsonObject]
    public class EmailAllDomainsResponse : IEquatable<EmailAllDomainsResponse>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailAllDomainsResponse" /> class.
        /// </summary>
        /// <param name="paging">paging.</param>
        /// <param name="results">List of domains that belong to the account..</param>
        public EmailAllDomainsResponse(EmailPaging paging = default, List<EmailDomainResponse> results = default)
        {
            Paging = paging;
            Results = results;
        }

        /// <summary>
        ///     Gets or Sets Paging
        /// </summary>
        [DataMember(Name = "paging", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "paging", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("paging")]
        public EmailPaging Paging { get; set; }

        /// <summary>
        ///     List of domains that belong to the account.
        /// </summary>
        /// <value>List of domains that belong to the account.</value>
        [DataMember(Name = "results", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "results", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("results")]
        public List<EmailDomainResponse> Results { get; set; }

        /// <summary>
        ///     Returns true if EmailAllDomainsResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailAllDomainsResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailAllDomainsResponse input)
        {
            if (input == null)
                return false;

            return
                (
                    Paging == input.Paging ||
                    (Paging != null &&
                     Paging.Equals(input.Paging))
                ) &&
                (
                    Results == input.Results ||
                    (Results != null &&
                     input.Results != null &&
                     Results.SequenceEqual(input.Results))
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailAllDomainsResponse {\n");
            sb.Append("  Paging: ").Append(Paging).Append("\n");
            sb.Append("  Results: ").Append(Results).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as EmailAllDomainsResponse);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (Paging != null)
                    hashCode = hashCode * 59 + Paging.GetHashCode();
                if (Results != null)
                    hashCode = hashCode * 59 + Results.GetHashCode();
                return hashCode;
            }
        }
    }
}