/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Globalization;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     JSON converter for <see cref="DateTimeOffset" /> that ensures serialization and
    ///     deserialization are performed using a standardized format.
    ///     Used by System.Text.Json.
    /// </summary>
    public class DateTimeOffsetConverter : JsonConverter<DateTimeOffset>
    {
        private static readonly string[] DateFormats =
        {
            "yyyy-MM-ddTHH:mm:ss.fffzzz",
            "yyyy-MM-ddTHH:mm:ss.fff'Z'",
            "yyyy-MM-ddTHH:mm:ss'Z'"
        };

        /// <summary>
        ///     Reads and converts a JSON string into a <see cref="DateTimeOffset" /> object.
        /// </summary>
        public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert,
            JsonSerializerOptions options)
        {
            var dateString = reader.GetString();

            if (DateTimeOffset.TryParse(dateString, null, DateTimeStyles.RoundtripKind, out var dto))
                return dto.ToUniversalTime();

            throw new JsonException($"Unable to parse DateTimeOffset: {dateString}");
        }

        /// <summary>
        ///     Writes a <see cref="DateTimeOffset" /> value as a JSON string using the specified format.
        /// </summary>
        public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)
        {
            var formattedDate = value.ToString("yyyy-MM-ddTHH:mm:ss.fffzzz", CultureInfo.InvariantCulture);
            writer.WriteStringValue(formattedDate);
        }
    }
}