/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     EmailBulkUpdateStatusRequest
    /// </summary>
    [DataContract(Name = "EmailBulkUpdateStatusRequest")]
    public class EmailBulkUpdateStatusRequest : IEquatable<EmailBulkUpdateStatusRequest>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailBulkUpdateStatusRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EmailBulkUpdateStatusRequest()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailBulkUpdateStatusRequest" /> class.
        /// </summary>
        /// <param name="status">status (required).</param>
        public EmailBulkUpdateStatusRequest(EmailBulkStatus status = default)
        {
            Status = status;
        }

        /// <summary>
        ///     Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", IsRequired = true, EmitDefaultValue = false)]
        public EmailBulkStatus Status { get; set; }

        /// <summary>
        ///     Returns true if EmailBulkUpdateStatusRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailBulkUpdateStatusRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailBulkUpdateStatusRequest input)
        {
            if (input == null)
                return false;

            return
                Status == input.Status ||
                Status.Equals(input.Status);
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailBulkUpdateStatusRequest {\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as EmailBulkUpdateStatusRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                hashCode = hashCode * 59 + Status.GetHashCode();
                return hashCode;
            }
        }
    }
}