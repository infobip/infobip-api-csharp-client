/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     Callback request.
    /// </summary>
    [DataContract(Name = "NumberMaskingCallbackRequest")]
    [JsonObject]
    public class NumberMaskingCallbackRequest : IEquatable<NumberMaskingCallbackRequest>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingCallbackRequest" /> class.
        /// </summary>
        /// <param name="from">Caller phone number..</param>
        /// <param name="to">Called phone number..</param>
        /// <param name="correlationId">Unique identifier of the call record, available for both Callback and Status requests..</param>
        /// <param name="nmCorrelationId">
        ///     Unique identifier for correlation with inbound call, available in Callback and Status
        ///     requests..
        /// </param>
        /// <param name="dtmfCaptured">
        ///     Indicates that this callback request is initiated after the &#x60;captureDtmf&#x60; command
        ///     is executed. Not present in the first callback request for the call..
        /// </param>
        public NumberMaskingCallbackRequest(string from = default, string to = default, string correlationId = default,
            string nmCorrelationId = default, bool dtmfCaptured = default)
        {
            From = from;
            To = to;
            CorrelationId = correlationId;
            NmCorrelationId = nmCorrelationId;
            DtmfCaptured = dtmfCaptured;
        }

        /// <summary>
        ///     Caller phone number.
        /// </summary>
        /// <value>Caller phone number.</value>
        [DataMember(Name = "from", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "from", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("from")]
        public string From { get; set; }

        /// <summary>
        ///     Called phone number.
        /// </summary>
        /// <value>Called phone number.</value>
        [DataMember(Name = "to", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "to", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("to")]
        public string To { get; set; }

        /// <summary>
        ///     Unique identifier of the call record, available for both Callback and Status requests.
        /// </summary>
        /// <value>Unique identifier of the call record, available for both Callback and Status requests.</value>
        [DataMember(Name = "correlationId", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "correlationId", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("correlationId")]
        public string CorrelationId { get; set; }

        /// <summary>
        ///     Unique identifier for correlation with inbound call, available in Callback and Status requests.
        /// </summary>
        /// <value>Unique identifier for correlation with inbound call, available in Callback and Status requests.</value>
        [DataMember(Name = "nmCorrelationId", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "nmCorrelationId", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("nmCorrelationId")]
        public string NmCorrelationId { get; set; }

        /// <summary>
        ///     Indicates that this callback request is initiated after the &#x60;captureDtmf&#x60; command is executed. Not
        ///     present in the first callback request for the call.
        /// </summary>
        /// <value>
        ///     Indicates that this callback request is initiated after the &#x60;captureDtmf&#x60; command is executed. Not
        ///     present in the first callback request for the call.
        /// </value>
        [DataMember(Name = "dtmfCaptured", EmitDefaultValue = true)]
        [JsonProperty(PropertyName = "dtmfCaptured", DefaultValueHandling = DefaultValueHandling.Include)]
        [JsonPropertyName("dtmfCaptured")]
        public bool DtmfCaptured { get; set; }

        /// <summary>
        ///     Returns true if NumberMaskingCallbackRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of NumberMaskingCallbackRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NumberMaskingCallbackRequest input)
        {
            if (input == null)
                return false;

            return
                (
                    From == input.From ||
                    (From != null &&
                     From.Equals(input.From))
                ) &&
                (
                    To == input.To ||
                    (To != null &&
                     To.Equals(input.To))
                ) &&
                (
                    CorrelationId == input.CorrelationId ||
                    (CorrelationId != null &&
                     CorrelationId.Equals(input.CorrelationId))
                ) &&
                (
                    NmCorrelationId == input.NmCorrelationId ||
                    (NmCorrelationId != null &&
                     NmCorrelationId.Equals(input.NmCorrelationId))
                ) &&
                (
                    DtmfCaptured == input.DtmfCaptured ||
                    DtmfCaptured.Equals(input.DtmfCaptured)
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NumberMaskingCallbackRequest {\n");
            sb.Append("  From: ").Append(From).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("  CorrelationId: ").Append(CorrelationId).Append("\n");
            sb.Append("  NmCorrelationId: ").Append(NmCorrelationId).Append("\n");
            sb.Append("  DtmfCaptured: ").Append(DtmfCaptured).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as NumberMaskingCallbackRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (From != null)
                    hashCode = hashCode * 59 + From.GetHashCode();
                if (To != null)
                    hashCode = hashCode * 59 + To.GetHashCode();
                if (CorrelationId != null)
                    hashCode = hashCode * 59 + CorrelationId.GetHashCode();
                if (NmCorrelationId != null)
                    hashCode = hashCode * 59 + NmCorrelationId.GetHashCode();
                hashCode = hashCode * 59 + DtmfCaptured.GetHashCode();
                return hashCode;
            }
        }
    }
}