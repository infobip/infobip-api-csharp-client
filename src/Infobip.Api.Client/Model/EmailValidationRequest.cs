/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     EmailValidationRequest
    /// </summary>
    [DataContract(Name = "EmailValidationRequest")]
    public class EmailValidationRequest : IEquatable<EmailValidationRequest>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailValidationRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected EmailValidationRequest()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="EmailValidationRequest" /> class.
        /// </summary>
        /// <param name="to">Email address of the recipient. (required).</param>
        public EmailValidationRequest(string to = default)
        {
            // to ensure "to" is required (not null)
            To = to ?? throw new ArgumentNullException("to");
        }

        /// <summary>
        ///     Email address of the recipient.
        /// </summary>
        /// <value>Email address of the recipient.</value>
        [DataMember(Name = "to", IsRequired = true, EmitDefaultValue = false)]
        public string To { get; set; }

        /// <summary>
        ///     Returns true if EmailValidationRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of EmailValidationRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EmailValidationRequest input)
        {
            if (input == null)
                return false;

            return
                To == input.To ||
                (To != null &&
                 To.Equals(input.To));
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EmailValidationRequest {\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as EmailValidationRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (To != null)
                    hashCode = hashCode * 59 + To.GetHashCode();
                return hashCode;
            }
        }
    }
}