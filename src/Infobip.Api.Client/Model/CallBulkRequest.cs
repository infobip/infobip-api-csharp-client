/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;
using Newtonsoft.Json;
using JsonConstructorAttribute = Newtonsoft.Json.JsonConstructorAttribute;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     CallBulkRequest
    /// </summary>
    [DataContract(Name = "CallBulkRequest")]
    [JsonObject]
    public class CallBulkRequest : IEquatable<CallBulkRequest>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="CallBulkRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CallBulkRequest()
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="CallBulkRequest" /> class.
        /// </summary>
        /// <param name="bulkId">
        ///     Unique ID of the bulk request. If it&#39;s not set, a unique ID will be assigned to the bulk
        ///     request..
        /// </param>
        /// <param name="callsConfigurationId">Calls Configuration ID. (required).</param>
        /// <param name="platform">platform.</param>
        /// <param name="items">Bulk item list. (required).</param>
        public CallBulkRequest(string bulkId = default, string callsConfigurationId = default,
            Platform platform = default, List<CallsBulkItem> items = default)
        {
            // to ensure "callsConfigurationId" is required (not null)
            CallsConfigurationId = callsConfigurationId ?? throw new ArgumentNullException("callsConfigurationId");
            // to ensure "items" is required (not null)
            Items = items ?? throw new ArgumentNullException("items");
            BulkId = bulkId;
            Platform = platform;
        }

        /// <summary>
        ///     Unique ID of the bulk request. If it&#39;s not set, a unique ID will be assigned to the bulk request.
        /// </summary>
        /// <value>Unique ID of the bulk request. If it&#39;s not set, a unique ID will be assigned to the bulk request.</value>
        [DataMember(Name = "bulkId", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "bulkId", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("bulkId")]
        public string BulkId { get; set; }

        /// <summary>
        ///     Calls Configuration ID.
        /// </summary>
        /// <value>Calls Configuration ID.</value>
        [DataMember(Name = "callsConfigurationId", IsRequired = true, EmitDefaultValue = true)]
        [JsonProperty(PropertyName = "callsConfigurationId", Required = Required.DisallowNull,
            DefaultValueHandling = DefaultValueHandling.Include)]
        [JsonPropertyName("callsConfigurationId")]
        public string CallsConfigurationId { get; set; }

        /// <summary>
        ///     Gets or Sets Platform
        /// </summary>
        [DataMember(Name = "platform", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "platform", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("platform")]
        public Platform Platform { get; set; }

        /// <summary>
        ///     Bulk item list.
        /// </summary>
        /// <value>Bulk item list.</value>
        [DataMember(Name = "items", IsRequired = true, EmitDefaultValue = true)]
        [JsonProperty(PropertyName = "items", Required = Required.DisallowNull,
            DefaultValueHandling = DefaultValueHandling.Include)]
        [JsonPropertyName("items")]
        public List<CallsBulkItem> Items { get; set; }

        /// <summary>
        ///     Returns true if CallBulkRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CallBulkRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallBulkRequest input)
        {
            if (input == null)
                return false;

            return
                (
                    BulkId == input.BulkId ||
                    (BulkId != null &&
                     BulkId.Equals(input.BulkId))
                ) &&
                (
                    CallsConfigurationId == input.CallsConfigurationId ||
                    (CallsConfigurationId != null &&
                     CallsConfigurationId.Equals(input.CallsConfigurationId))
                ) &&
                (
                    Platform == input.Platform ||
                    (Platform != null &&
                     Platform.Equals(input.Platform))
                ) &&
                (
                    Items == input.Items ||
                    (Items != null &&
                     input.Items != null &&
                     Items.SequenceEqual(input.Items))
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallBulkRequest {\n");
            sb.Append("  BulkId: ").Append(BulkId).Append("\n");
            sb.Append("  CallsConfigurationId: ").Append(CallsConfigurationId).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as CallBulkRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (BulkId != null)
                    hashCode = hashCode * 59 + BulkId.GetHashCode();
                if (CallsConfigurationId != null)
                    hashCode = hashCode * 59 + CallsConfigurationId.GetHashCode();
                if (Platform != null)
                    hashCode = hashCode * 59 + Platform.GetHashCode();
                if (Items != null)
                    hashCode = hashCode * 59 + Items.GetHashCode();
                return hashCode;
            }
        }
    }
}