/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     Used to determine whether to retry the delivery of a bulk call if the initial attempt fails. Additional retries
    ///     will occur based on the schedule defined by the _minWaitPeriod_ and _maxWaitPeriod_ parameters, as well as the
    ///     platform&#39;s internal retry logic. If _minWaitPeriod_ differs from _maxWaitPeriod_, the delivery will be retried
    ///     according to the following schedule: after 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30 minutes, 1
    ///     hour, 2 hours, 4 hours, 8 hours, 16 hours, and 24 hours, or until _maxWaitPeriod_ is reached. Once the retry
    ///     attempt for _maxWaitPeriod_ is reached, _maxWaitPeriod_ will be used for all subsequent retries. If _minWaitPeriod_
    ///     and _maxWaitPeriod_ are defined as equal values, the period between retries will be equal to this value. Bulk call
    ///     delivery will be retried until successful delivery, call validity expiration, or reaching the _maxAttempts_ value.
    /// </summary>
    [DataContract(Name = "CallsRetryOptions")]
    [JsonObject]
    public class CallsRetryOptions : IEquatable<CallsRetryOptions>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="CallsRetryOptions" /> class.
        /// </summary>
        /// <param name="minWaitPeriod">
        ///     Defines the minimum waiting time (in minutes) after the previous failed attempt before
        ///     trying to establish the call again. Supported values are 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30
        ///     minutes, 1 hour, 2 hours, 4 hours, 8 hours, 16 hours, and 24 hours. If entered a value that is not in the list but
        ///     is smaller than 24 hours, the next bigger value from the list will be used. If a value larger than 24 hours is
        ///     entered, 24 hours will be used..
        /// </param>
        /// <param name="maxWaitPeriod">
        ///     Defines the maximum waiting time (in minutes) after the previous failed attempt before
        ///     trying to establish the call again. Supported values are 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30
        ///     minutes, 1 hour, 2 hours, 4 hours, 8 hours, 16 hours, and 24 hours. If entered a value that is not in the list but
        ///     is smaller than 24 hours, the next bigger value from the list will be used. If a value larger than 24 hours is
        ///     entered, 24 hours will be used..
        /// </param>
        /// <param name="maxAttempts">
        ///     Defines the maximum number of retry attempts. The maximum value is &#x60;4&#x60;. If a value
        ///     higher than &#x60;4&#x60; is entered, it will be set to &#x60;4&#x60;..
        /// </param>
        public CallsRetryOptions(int minWaitPeriod = default, int maxWaitPeriod = default, int maxAttempts = default)
        {
            MinWaitPeriod = minWaitPeriod;
            MaxWaitPeriod = maxWaitPeriod;
            MaxAttempts = maxAttempts;
        }

        /// <summary>
        ///     Defines the minimum waiting time (in minutes) after the previous failed attempt before trying to establish the call
        ///     again. Supported values are 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30 minutes, 1 hour, 2 hours, 4
        ///     hours, 8 hours, 16 hours, and 24 hours. If entered a value that is not in the list but is smaller than 24 hours,
        ///     the next bigger value from the list will be used. If a value larger than 24 hours is entered, 24 hours will be
        ///     used.
        /// </summary>
        /// <value>
        ///     Defines the minimum waiting time (in minutes) after the previous failed attempt before trying to establish the
        ///     call again. Supported values are 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30 minutes, 1 hour, 2
        ///     hours, 4 hours, 8 hours, 16 hours, and 24 hours. If entered a value that is not in the list but is smaller than 24
        ///     hours, the next bigger value from the list will be used. If a value larger than 24 hours is entered, 24 hours will
        ///     be used.
        /// </value>
        [DataMember(Name = "minWaitPeriod", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "minWaitPeriod", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("minWaitPeriod")]
        public int MinWaitPeriod { get; set; }

        /// <summary>
        ///     Defines the maximum waiting time (in minutes) after the previous failed attempt before trying to establish the call
        ///     again. Supported values are 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30 minutes, 1 hour, 2 hours, 4
        ///     hours, 8 hours, 16 hours, and 24 hours. If entered a value that is not in the list but is smaller than 24 hours,
        ///     the next bigger value from the list will be used. If a value larger than 24 hours is entered, 24 hours will be
        ///     used.
        /// </summary>
        /// <value>
        ///     Defines the maximum waiting time (in minutes) after the previous failed attempt before trying to establish the
        ///     call again. Supported values are 1 minute, 2 minutes, 5 minutes, 10 minutes, 20 minutes, 30 minutes, 1 hour, 2
        ///     hours, 4 hours, 8 hours, 16 hours, and 24 hours. If entered a value that is not in the list but is smaller than 24
        ///     hours, the next bigger value from the list will be used. If a value larger than 24 hours is entered, 24 hours will
        ///     be used.
        /// </value>
        [DataMember(Name = "maxWaitPeriod", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "maxWaitPeriod", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("maxWaitPeriod")]
        public int MaxWaitPeriod { get; set; }

        /// <summary>
        ///     Defines the maximum number of retry attempts. The maximum value is &#x60;4&#x60;. If a value higher than &#x60;4
        ///     &#x60; is entered, it will be set to &#x60;4&#x60;.
        /// </summary>
        /// <value>
        ///     Defines the maximum number of retry attempts. The maximum value is &#x60;4&#x60;. If a value higher than &#x60;4
        ///     &#x60; is entered, it will be set to &#x60;4&#x60;.
        /// </value>
        [DataMember(Name = "maxAttempts", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "maxAttempts", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("maxAttempts")]
        public int MaxAttempts { get; set; }

        /// <summary>
        ///     Returns true if CallsRetryOptions instances are equal
        /// </summary>
        /// <param name="input">Instance of CallsRetryOptions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallsRetryOptions input)
        {
            if (input == null)
                return false;

            return
                (
                    MinWaitPeriod == input.MinWaitPeriod ||
                    MinWaitPeriod.Equals(input.MinWaitPeriod)
                ) &&
                (
                    MaxWaitPeriod == input.MaxWaitPeriod ||
                    MaxWaitPeriod.Equals(input.MaxWaitPeriod)
                ) &&
                (
                    MaxAttempts == input.MaxAttempts ||
                    MaxAttempts.Equals(input.MaxAttempts)
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallsRetryOptions {\n");
            sb.Append("  MinWaitPeriod: ").Append(MinWaitPeriod).Append("\n");
            sb.Append("  MaxWaitPeriod: ").Append(MaxWaitPeriod).Append("\n");
            sb.Append("  MaxAttempts: ").Append(MaxAttempts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as CallsRetryOptions);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                hashCode = hashCode * 59 + MinWaitPeriod.GetHashCode();
                hashCode = hashCode * 59 + MaxWaitPeriod.GetHashCode();
                hashCode = hashCode * 59 + MaxAttempts.GetHashCode();
                return hashCode;
            }
        }
    }
}