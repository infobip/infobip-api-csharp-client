/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     TfaStartEmailAuthenticationResponse
    /// </summary>
    [DataContract(Name = "TfaStartEmailAuthenticationResponse")]
    public class TfaStartEmailAuthenticationResponse : IEquatable<TfaStartEmailAuthenticationResponse>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="TfaStartEmailAuthenticationResponse" /> class.
        /// </summary>
        /// <param name="emailStatus">emailStatus.</param>
        /// <param name="pinId">Sent PIN code ID..</param>
        /// <param name="to">Email address to which the 2FA message has been sent. Example: john.smith@example.com..</param>
        public TfaStartEmailAuthenticationResponse(TfaEmailStatus emailStatus = default, string pinId = default,
            string to = default)
        {
            EmailStatus = emailStatus;
            PinId = pinId;
            To = to;
        }

        /// <summary>
        ///     Gets or Sets EmailStatus
        /// </summary>
        [DataMember(Name = "emailStatus", EmitDefaultValue = false)]
        public TfaEmailStatus EmailStatus { get; set; }

        /// <summary>
        ///     Sent PIN code ID.
        /// </summary>
        /// <value>Sent PIN code ID.</value>
        [DataMember(Name = "pinId", EmitDefaultValue = false)]
        public string PinId { get; set; }

        /// <summary>
        ///     Email address to which the 2FA message has been sent. Example: john.smith@example.com.
        /// </summary>
        /// <value>Email address to which the 2FA message has been sent. Example: john.smith@example.com.</value>
        [DataMember(Name = "to", EmitDefaultValue = false)]
        public string To { get; set; }

        /// <summary>
        ///     Returns true if TfaStartEmailAuthenticationResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TfaStartEmailAuthenticationResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TfaStartEmailAuthenticationResponse input)
        {
            if (input == null)
                return false;

            return
                (
                    EmailStatus == input.EmailStatus ||
                    (EmailStatus != null &&
                     EmailStatus.Equals(input.EmailStatus))
                ) &&
                (
                    PinId == input.PinId ||
                    (PinId != null &&
                     PinId.Equals(input.PinId))
                ) &&
                (
                    To == input.To ||
                    (To != null &&
                     To.Equals(input.To))
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TfaStartEmailAuthenticationResponse {\n");
            sb.Append("  EmailStatus: ").Append(EmailStatus).Append("\n");
            sb.Append("  PinId: ").Append(PinId).Append("\n");
            sb.Append("  To: ").Append(To).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as TfaStartEmailAuthenticationResponse);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                if (EmailStatus != null)
                    hashCode = hashCode * 59 + EmailStatus.GetHashCode();
                if (PinId != null)
                    hashCode = hashCode * 59 + PinId.GetHashCode();
                if (To != null)
                    hashCode = hashCode * 59 + To.GetHashCode();
                return hashCode;
            }
        }
    }
}