/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System.Runtime.Serialization;
using System.Text.Json.Serialization;
using Newtonsoft.Json.Converters;
using JsonConverterAttribute = Newtonsoft.Json.JsonConverterAttribute;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     The transliteration of your sent message from one script to another. Transliteration is used to replace characters
    ///     which are not recognized as part of your defaulted alphabet. Possible values: &#x60;TURKISH&#x60;, &#x60;GREEK
    ///     &#x60;, &#x60;CYRILLIC&#x60;, &#x60;SERBIAN_CYRILLIC&#x60;, &#x60;BULGARIAN_CYRILLIC&#x60;, &#x60;CENTRAL_EUROPEAN
    ///     &#x60;, &#x60;BALTIC&#x60;, &#x60;PORTUGUESE&#x60;, &#x60;COLOMBIAN&#x60;, and &#x60;NON_UNICODE&#x60;..
    /// </summary>
    /// <value>
    ///     The transliteration of your sent message from one script to another. Transliteration is used to replace
    ///     characters which are not recognized as part of your defaulted alphabet. Possible values: &#x60;TURKISH&#x60;,
    ///     &#x60;GREEK&#x60;, &#x60;CYRILLIC&#x60;, &#x60;SERBIAN_CYRILLIC&#x60;, &#x60;BULGARIAN_CYRILLIC&#x60;, &#x60;
    ///     CENTRAL_EUROPEAN&#x60;, &#x60;BALTIC&#x60;, &#x60;PORTUGUESE&#x60;, &#x60;COLOMBIAN&#x60;, and &#x60;NON_UNICODE
    ///     &#x60;.
    /// </value>
    [JsonConverter(typeof(StringEnumConverter))]
    [System.Text.Json.Serialization.JsonConverter(typeof(JsonStringEnumConverter))]
    public enum SmsTransliterationCode
    {
        /// <summary>
        ///     Enum None for value: NONE
        /// </summary>
        [EnumMember(Value = "NONE")] None = 1,

        /// <summary>
        ///     Enum Turkish for value: TURKISH
        /// </summary>
        [EnumMember(Value = "TURKISH")] Turkish = 2,

        /// <summary>
        ///     Enum Greek for value: GREEK
        /// </summary>
        [EnumMember(Value = "GREEK")] Greek = 3,

        /// <summary>
        ///     Enum Cyrillic for value: CYRILLIC
        /// </summary>
        [EnumMember(Value = "CYRILLIC")] Cyrillic = 4,

        /// <summary>
        ///     Enum SerbianCyrillic for value: SERBIAN_CYRILLIC
        /// </summary>
        [EnumMember(Value = "SERBIAN_CYRILLIC")]
        SerbianCyrillic = 5,

        /// <summary>
        ///     Enum CentralEuropean for value: CENTRAL_EUROPEAN
        /// </summary>
        [EnumMember(Value = "CENTRAL_EUROPEAN")]
        CentralEuropean = 6,

        /// <summary>
        ///     Enum Baltic for value: BALTIC
        /// </summary>
        [EnumMember(Value = "BALTIC")] Baltic = 7,

        /// <summary>
        ///     Enum NonUnicode for value: NON_UNICODE
        /// </summary>
        [EnumMember(Value = "NON_UNICODE")] NonUnicode = 8,

        /// <summary>
        ///     Enum Portuguese for value: PORTUGUESE
        /// </summary>
        [EnumMember(Value = "PORTUGUESE")] Portuguese = 9,

        /// <summary>
        ///     Enum Colombian for value: COLOMBIAN
        /// </summary>
        [EnumMember(Value = "COLOMBIAN")] Colombian = 10,

        /// <summary>
        ///     Enum BulgarianCyrillic for value: BULGARIAN_CYRILLIC
        /// </summary>
        [EnumMember(Value = "BULGARIAN_CYRILLIC")]
        BulgarianCyrillic = 11,

        /// <summary>
        ///     Enum All for value: ALL
        /// </summary>
        [EnumMember(Value = "ALL")] All = 12
    }
}