/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json.Serialization;
using Newtonsoft.Json;

namespace Infobip.Api.Client.Model
{
    /// <summary>
    ///     CallsAddExistingCallRequest
    /// </summary>
    [DataContract(Name = "CallsAddExistingCallRequest")]
    [JsonObject]
    public class CallsAddExistingCallRequest : IEquatable<CallsAddExistingCallRequest>
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="CallsAddExistingCallRequest" /> class.
        /// </summary>
        /// <param name="connectOnEarlyMedia">
        ///     Indicates whether to add an existing call on early media. Otherwise, the call will be
        ///     added after being established. This field is applicable for &#x60;OUTBOUND&#x60; calls only. Cannot be &#x60;true
        ///     &#x60; when &#x60;ringbackGeneration&#x60; is enabled. (default to false).
        /// </param>
        /// <param name="ringbackGeneration">ringbackGeneration.</param>
        public CallsAddExistingCallRequest(bool connectOnEarlyMedia = false,
            RingbackGeneration ringbackGeneration = default)
        {
            ConnectOnEarlyMedia = connectOnEarlyMedia;
            RingbackGeneration = ringbackGeneration;
        }

        /// <summary>
        ///     Indicates whether to add an existing call on early media. Otherwise, the call will be added after being
        ///     established. This field is applicable for &#x60;OUTBOUND&#x60; calls only. Cannot be &#x60;true&#x60; when &#x60;
        ///     ringbackGeneration&#x60; is enabled.
        /// </summary>
        /// <value>
        ///     Indicates whether to add an existing call on early media. Otherwise, the call will be added after being
        ///     established. This field is applicable for &#x60;OUTBOUND&#x60; calls only. Cannot be &#x60;true&#x60; when &#x60;
        ///     ringbackGeneration&#x60; is enabled.
        /// </value>
        [DataMember(Name = "connectOnEarlyMedia", EmitDefaultValue = true)]
        [JsonProperty(PropertyName = "connectOnEarlyMedia", DefaultValueHandling = DefaultValueHandling.Include)]
        [JsonPropertyName("connectOnEarlyMedia")]
        public bool ConnectOnEarlyMedia { get; set; }

        /// <summary>
        ///     Gets or Sets RingbackGeneration
        /// </summary>
        [DataMember(Name = "ringbackGeneration", EmitDefaultValue = false)]
        [JsonProperty(PropertyName = "ringbackGeneration", DefaultValueHandling = DefaultValueHandling.Ignore)]
        [JsonPropertyName("ringbackGeneration")]
        public RingbackGeneration RingbackGeneration { get; set; }

        /// <summary>
        ///     Returns true if CallsAddExistingCallRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of CallsAddExistingCallRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallsAddExistingCallRequest input)
        {
            if (input == null)
                return false;

            return
                (
                    ConnectOnEarlyMedia == input.ConnectOnEarlyMedia ||
                    ConnectOnEarlyMedia.Equals(input.ConnectOnEarlyMedia)
                ) &&
                (
                    RingbackGeneration == input.RingbackGeneration ||
                    (RingbackGeneration != null &&
                     RingbackGeneration.Equals(input.RingbackGeneration))
                );
        }

        /// <summary>
        ///     Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallsAddExistingCallRequest {\n");
            sb.Append("  ConnectOnEarlyMedia: ").Append(ConnectOnEarlyMedia).Append("\n");
            sb.Append("  RingbackGeneration: ").Append(RingbackGeneration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        ///     Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return Equals(input as CallsAddExistingCallRequest);
        }

        /// <summary>
        ///     Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                hashCode = hashCode * 59 + ConnectOnEarlyMedia.GetHashCode();
                if (RingbackGeneration != null)
                    hashCode = hashCode * 59 + RingbackGeneration.GetHashCode();
                return hashCode;
            }
        }
    }
}