/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using System.Net.Http;
using System.Threading;
using System.Threading.Tasks;
using Infobip.Api.Client.Model;
using ClientConfiguration = Infobip.Api.Client.Configuration;

namespace Infobip.Api.Client.Api
{
    /// <summary>
    ///     Represents a collection of functions to interact with the API endpoints.
    /// </summary>
    public interface INumberMaskingApiSync : IApiAccessor
    {
        /// <summary>
        ///     Create number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to create masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>NumberMaskingSetupResponse</returns>
        NumberMaskingSetupResponse CreateNumberMaskingConfiguration(NumberMaskingSetupBody numberMaskingSetupBody);

        /// <summary>
        ///     Create number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to create masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>ApiResponse of NumberMaskingSetupResponse</returns>
        ApiResponse<NumberMaskingSetupResponse> CreateNumberMaskingConfigurationWithHttpInfo(
            NumberMaskingSetupBody numberMaskingSetupBody);

        /// <summary>
        ///     Create number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to create Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>NumberMaskingCredentialsResponse</returns>
        NumberMaskingCredentialsResponse CreateNumberMaskingCredentials(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody);

        /// <summary>
        ///     Create number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to create Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>ApiResponse of NumberMaskingCredentialsResponse</returns>
        ApiResponse<NumberMaskingCredentialsResponse> CreateNumberMaskingCredentialsWithHttpInfo(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody);

        /// <summary>
        ///     Delete number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns></returns>
        void DeleteNumberMaskingConfiguration(string key);

        /// <summary>
        ///     Delete number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns>ApiResponse of object(void)</returns>
        ApiResponse<object> DeleteNumberMaskingConfigurationWithHttpInfo(string key);

        /// <summary>
        ///     Delete number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        void DeleteNumberMaskingCredentials();

        /// <summary>
        ///     Delete number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of object(void)</returns>
        ApiResponse<object> DeleteNumberMaskingCredentialsWithHttpInfo();

        /// <summary>
        ///     Get number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to get a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns>NumberMaskingSetupResponse</returns>
        NumberMaskingSetupResponse GetNumberMaskingConfiguration(string key);

        /// <summary>
        ///     Get number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to get a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns>ApiResponse of NumberMaskingSetupResponse</returns>
        ApiResponse<NumberMaskingSetupResponse> GetNumberMaskingConfigurationWithHttpInfo(string key);

        /// <summary>
        ///     Get number masking configurations
        /// </summary>
        /// <remarks>
        ///     This method allows you to get all voice number masking configurations.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;NumberMaskingSetupResponse&gt;</returns>
        List<NumberMaskingSetupResponse> GetNumberMaskingConfigurations();

        /// <summary>
        ///     Get number masking configurations
        /// </summary>
        /// <remarks>
        ///     This method allows you to get all voice number masking configurations.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;NumberMaskingSetupResponse&gt;</returns>
        ApiResponse<List<NumberMaskingSetupResponse>> GetNumberMaskingConfigurationsWithHttpInfo();

        /// <summary>
        ///     Get number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to get Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>NumberMaskingCredentialsResponse</returns>
        NumberMaskingCredentialsResponse GetNumberMaskingCredentials();

        /// <summary>
        ///     Get number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to get Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of NumberMaskingCredentialsResponse</returns>
        ApiResponse<NumberMaskingCredentialsResponse> GetNumberMaskingCredentialsWithHttpInfo();

        /// <summary>
        ///     Update number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to update a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>NumberMaskingSetupResponse</returns>
        NumberMaskingSetupResponse UpdateNumberMaskingConfiguration(string key,
            NumberMaskingSetupBody numberMaskingSetupBody);

        /// <summary>
        ///     Update number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to update a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>ApiResponse of NumberMaskingSetupResponse</returns>
        ApiResponse<NumberMaskingSetupResponse> UpdateNumberMaskingConfigurationWithHttpInfo(string key,
            NumberMaskingSetupBody numberMaskingSetupBody);

        /// <summary>
        ///     Update number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to update Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>NumberMaskingCredentialsResponse</returns>
        NumberMaskingCredentialsResponse UpdateNumberMaskingCredentials(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody);

        /// <summary>
        ///     Update number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to update Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>ApiResponse of NumberMaskingCredentialsResponse</returns>
        ApiResponse<NumberMaskingCredentialsResponse> UpdateNumberMaskingCredentialsWithHttpInfo(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody);

        /// <summary>
        ///     Upload audio files
        /// </summary>
        /// <remarks>
        ///     This method allows uploading audio files that can be used on Infobip Voice platform. The method accepts either a
        ///     URL or an uploaded audio file in the request body. Using both or neither will cause the request to be rejected.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <returns>NumberMaskingUploadResponse</returns>
        NumberMaskingUploadResponse UploadAudioFiles(NumberMaskingUploadBody numberMaskingUploadBody);

        /// <summary>
        ///     Upload audio files
        /// </summary>
        /// <remarks>
        ///     This method allows uploading audio files that can be used on Infobip Voice platform. The method accepts either a
        ///     URL or an uploaded audio file in the request body. Using both or neither will cause the request to be rejected.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <returns>ApiResponse of NumberMaskingUploadResponse</returns>
        ApiResponse<NumberMaskingUploadResponse> UploadAudioFilesWithHttpInfo(
            NumberMaskingUploadBody numberMaskingUploadBody);
    }

    /// <summary>
    ///     Represents a collection of functions to interact with the API endpoints.
    /// </summary>
    public interface INumberMaskingApiAsync : IApiAccessor
    {
        /// <summary>
        ///     Create number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to create masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingSetupResponse</returns>
        Task<NumberMaskingSetupResponse> CreateNumberMaskingConfigurationAsync(
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Create number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to create masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingSetupResponse)</returns>
        Task<ApiResponse<NumberMaskingSetupResponse>> CreateNumberMaskingConfigurationWithHttpInfoAsync(
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Create number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to create Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingCredentialsResponse</returns>
        Task<NumberMaskingCredentialsResponse> CreateNumberMaskingCredentialsAsync(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Create number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to create Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingCredentialsResponse)</returns>
        Task<ApiResponse<NumberMaskingCredentialsResponse>> CreateNumberMaskingCredentialsWithHttpInfoAsync(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Delete number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        Task DeleteNumberMaskingConfigurationAsync(string key, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Delete number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        Task<ApiResponse<object>> DeleteNumberMaskingConfigurationWithHttpInfoAsync(string key,
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Delete number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        Task DeleteNumberMaskingCredentialsAsync(CancellationToken cancellationToken = default);

        /// <summary>
        ///     Delete number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to delete Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        Task<ApiResponse<object>> DeleteNumberMaskingCredentialsWithHttpInfoAsync(
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Get number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to get a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingSetupResponse</returns>
        Task<NumberMaskingSetupResponse> GetNumberMaskingConfigurationAsync(string key,
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Get number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to get a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingSetupResponse)</returns>
        Task<ApiResponse<NumberMaskingSetupResponse>> GetNumberMaskingConfigurationWithHttpInfoAsync(string key,
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Get number masking configurations
        /// </summary>
        /// <remarks>
        ///     This method allows you to get all voice number masking configurations.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;NumberMaskingSetupResponse&gt;</returns>
        Task<List<NumberMaskingSetupResponse>> GetNumberMaskingConfigurationsAsync(
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Get number masking configurations
        /// </summary>
        /// <remarks>
        ///     This method allows you to get all voice number masking configurations.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;NumberMaskingSetupResponse&gt;)</returns>
        Task<ApiResponse<List<NumberMaskingSetupResponse>>> GetNumberMaskingConfigurationsWithHttpInfoAsync(
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Get number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to get Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingCredentialsResponse</returns>
        Task<NumberMaskingCredentialsResponse> GetNumberMaskingCredentialsAsync(
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Get number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to get Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingCredentialsResponse)</returns>
        Task<ApiResponse<NumberMaskingCredentialsResponse>> GetNumberMaskingCredentialsWithHttpInfoAsync(
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Update number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to update a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingSetupResponse</returns>
        Task<NumberMaskingSetupResponse> UpdateNumberMaskingConfigurationAsync(string key,
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Update number masking configuration
        /// </summary>
        /// <remarks>
        ///     This method allows you to update a Voice number masking configuration.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingSetupResponse)</returns>
        Task<ApiResponse<NumberMaskingSetupResponse>> UpdateNumberMaskingConfigurationWithHttpInfoAsync(string key,
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Update number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to update Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingCredentialsResponse</returns>
        Task<NumberMaskingCredentialsResponse> UpdateNumberMaskingCredentialsAsync(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Update number masking credentials
        /// </summary>
        /// <remarks>
        ///     This method allows you to update Voice number masking credentials.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingCredentialsResponse)</returns>
        Task<ApiResponse<NumberMaskingCredentialsResponse>> UpdateNumberMaskingCredentialsWithHttpInfoAsync(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody, CancellationToken cancellationToken = default);

        /// <summary>
        ///     Upload audio files
        /// </summary>
        /// <remarks>
        ///     This method allows uploading audio files that can be used on Infobip Voice platform. The method accepts either a
        ///     URL or an uploaded audio file in the request body. Using both or neither will cause the request to be rejected.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingUploadResponse</returns>
        Task<NumberMaskingUploadResponse> UploadAudioFilesAsync(NumberMaskingUploadBody numberMaskingUploadBody,
            CancellationToken cancellationToken = default);

        /// <summary>
        ///     Upload audio files
        /// </summary>
        /// <remarks>
        ///     This method allows uploading audio files that can be used on Infobip Voice platform. The method accepts either a
        ///     URL or an uploaded audio file in the request body. Using both or neither will cause the request to be rejected.
        /// </remarks>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingUploadResponse)</returns>
        Task<ApiResponse<NumberMaskingUploadResponse>> UploadAudioFilesWithHttpInfoAsync(
            NumberMaskingUploadBody numberMaskingUploadBody, CancellationToken cancellationToken = default);
    }

    /// <summary>
    ///     Represents a collection of functions to interact with the API endpoints.
    /// </summary>
    public interface INumberMaskingApi : INumberMaskingApiSync, INumberMaskingApiAsync
    {
    }

    /// <summary>
    ///     Represents a collection of functions to interact with the API endpoints.
    /// </summary>
    public class NumberMaskingApi : INumberMaskingApi
    {
        private ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        /// </summary>
        /// <returns></returns>
        public NumberMaskingApi() : this((string)null)
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        /// </summary>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        public NumberMaskingApi(string basePath)
        {
            ApiClient = new ApiClient(Configuration.BasePath);
            AsynchronousClient = ApiClient;
            Client = ApiClient;
            Configuration = new Configuration { BasePath = basePath };
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class using Configuration object.
        /// </summary>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        public NumberMaskingApi(Configuration configuration)
        {
            if (configuration == null)
                throw new ArgumentNullException(nameof(configuration));

            Configuration = configuration;
            ApiClient = new ApiClient(Configuration.BasePath);
            Client = ApiClient;
            AsynchronousClient = ApiClient;
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        ///     Some configuration settings will not be applied without passing an HttpClientHandler.
        ///     The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public NumberMaskingApi(HttpClient client) : this(client, (string)null)
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        /// <remarks>
        ///     Some configuration settings will not be applied without passing an HttpClientHandler.
        ///     The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public NumberMaskingApi(HttpClient client, string basePath)
        {
            if (client == null)
                throw new ArgumentNullException(nameof(client));

            Configuration = new Configuration { BasePath = basePath };
            ApiClient = new ApiClient(client, Configuration.BasePath);
            Client = ApiClient;
            AsynchronousClient = ApiClient;
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class using Configuration object.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        /// <remarks>
        ///     Some configuration settings will not be applied without passing an HttpClientHandler.
        ///     The features affected are: Setting and Retrieving Cookies, Client Certificates, Proxy settings.
        /// </remarks>
        public NumberMaskingApi(HttpClient client, Configuration configuration)
        {
            if (configuration == null)
                throw new ArgumentNullException(nameof(configuration));

            if (client == null)
                throw new ArgumentNullException(nameof(client));

            Configuration = configuration;
            ApiClient = new ApiClient(client, Configuration.BasePath);
            Client = ApiClient;
            AsynchronousClient = ApiClient;
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="handler">An instance of HttpClientHandler that is used by HttpClient.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        public NumberMaskingApi(HttpClient client, HttpClientHandler handler) : this(client, handler, (string)null)
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="handler">An instance of HttpClientHandler that is used by HttpClient.</param>
        /// <param name="basePath">The target service's base path in URL format.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <exception cref="ArgumentException"></exception>
        /// <returns></returns>
        public NumberMaskingApi(HttpClient client, HttpClientHandler handler, string basePath)
        {
            if (client == null)
                throw new ArgumentNullException(nameof(client));

            if (handler == null)
                throw new ArgumentNullException(nameof(handler));

            Configuration = new Configuration { BasePath = basePath };
            ApiClient = new ApiClient(client, handler, Configuration.BasePath);
            Client = ApiClient;
            AsynchronousClient = ApiClient;
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class using Configuration object.
        /// </summary>
        /// <param name="client">An instance of HttpClient.</param>
        /// <param name="handler">An instance of HttpClientHandler that is used by HttpClient.</param>
        /// <param name="configuration">An instance of Configuration.</param>
        /// <exception cref="ArgumentNullException"></exception>
        /// <returns></returns>
        public NumberMaskingApi(HttpClient client, HttpClientHandler handler, Configuration configuration)
        {
            if (configuration == null)
                throw new ArgumentNullException(nameof(configuration));

            if (client == null)
                throw new ArgumentNullException(nameof(client));

            if (handler == null)
                throw new ArgumentNullException(nameof(handler));

            Configuration = configuration;
            ApiClient = new ApiClient(client, handler, Configuration.BasePath);
            AsynchronousClient = ApiClient;
            Client = ApiClient;
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="NumberMaskingApi" /> class.
        ///     using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        /// <exception cref="ArgumentNullException"></exception>
        public NumberMaskingApi(ISynchronousClient client, IAsynchronousClient asyncClient,
            IReadableConfiguration configuration)
        {
            AsynchronousClient = asyncClient ?? throw new ArgumentNullException(nameof(asyncClient));
            Client = client ?? throw new ArgumentNullException(nameof(client));
            Configuration = configuration ?? throw new ArgumentNullException(nameof(configuration));
            ExceptionFactory = ClientConfiguration.DefaultExceptionFactory;
        }

        /// <summary>
        ///     Holds the ApiClient if created.
        /// </summary>
        public ApiClient ApiClient { get; set; }

        /// <summary>
        ///     The client for accessing this underlying API asynchronously.
        /// </summary>
        public IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        ///     The client for accessing this underlying API synchronously.
        /// </summary>
        public ISynchronousClient Client { get; set; }

        /// <summary>
        ///     Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return Configuration.BasePath;
        }

        /// <summary>
        ///     Gets or sets the configuration object.
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public IReadableConfiguration Configuration { get; set; }

        /// <summary>
        ///     Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");

                return _exceptionFactory;
            }
            set => _exceptionFactory = value;
        }

        /// <summary>
        ///     Create number masking configuration This method allows you to create masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>NumberMaskingSetupResponse</returns>
        public NumberMaskingSetupResponse CreateNumberMaskingConfiguration(
            NumberMaskingSetupBody numberMaskingSetupBody)
        {
            var localVarResponse = CreateNumberMaskingConfigurationWithHttpInfo(numberMaskingSetupBody);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Create number masking configuration This method allows you to create masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>ApiResponse of NumberMaskingSetupResponse</returns>
        public ApiResponse<NumberMaskingSetupResponse> CreateNumberMaskingConfigurationWithHttpInfo(
            NumberMaskingSetupBody numberMaskingSetupBody)
        {
            // verify the required parameter 'numberMaskingSetupBody' is set
            if (numberMaskingSetupBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingSetupBody' when calling NumberMaskingApi->CreateNumberMaskingConfiguration");

            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingSetupBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse =
                Client.Post<NumberMaskingSetupResponse>("/voice/masking/2/config", localVarRequestOptions,
                    Configuration);

            var exception = ExceptionFactory?.Invoke("CreateNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Create number masking configuration This method allows you to create masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingSetupResponse</returns>
        public async Task<NumberMaskingSetupResponse> CreateNumberMaskingConfigurationAsync(
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default)
        {
            var localVarResponse =
                await CreateNumberMaskingConfigurationWithHttpInfoAsync(numberMaskingSetupBody, cancellationToken)
                    .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Create number masking configuration This method allows you to create masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingSetupResponse)</returns>
        public async Task<ApiResponse<NumberMaskingSetupResponse>> CreateNumberMaskingConfigurationWithHttpInfoAsync(
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'numberMaskingSetupBody' is set
            if (numberMaskingSetupBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingSetupBody' when calling NumberMaskingApi->CreateNumberMaskingConfiguration");


            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingSetupBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .PostAsync<NumberMaskingSetupResponse>("/voice/masking/2/config", localVarRequestOptions, Configuration,
                    cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("CreateNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Create number masking credentials This method allows you to create Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>NumberMaskingCredentialsResponse</returns>
        public NumberMaskingCredentialsResponse CreateNumberMaskingCredentials(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody)
        {
            var localVarResponse = CreateNumberMaskingCredentialsWithHttpInfo(numberMaskingCredentialsBody);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Create number masking credentials This method allows you to create Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>ApiResponse of NumberMaskingCredentialsResponse</returns>
        public ApiResponse<NumberMaskingCredentialsResponse> CreateNumberMaskingCredentialsWithHttpInfo(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody)
        {
            // verify the required parameter 'numberMaskingCredentialsBody' is set
            if (numberMaskingCredentialsBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingCredentialsBody' when calling NumberMaskingApi->CreateNumberMaskingCredentials");

            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingCredentialsBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse = Client.Post<NumberMaskingCredentialsResponse>("/voice/masking/2/credentials",
                localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("CreateNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Create number masking credentials This method allows you to create Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingCredentialsResponse</returns>
        public async Task<NumberMaskingCredentialsResponse> CreateNumberMaskingCredentialsAsync(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody, CancellationToken cancellationToken = default)
        {
            var localVarResponse =
                await CreateNumberMaskingCredentialsWithHttpInfoAsync(numberMaskingCredentialsBody, cancellationToken)
                    .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Create number masking credentials This method allows you to create Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingCredentialsResponse)</returns>
        public async Task<ApiResponse<NumberMaskingCredentialsResponse>>
            CreateNumberMaskingCredentialsWithHttpInfoAsync(NumberMaskingCredentialsBody numberMaskingCredentialsBody,
                CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'numberMaskingCredentialsBody' is set
            if (numberMaskingCredentialsBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingCredentialsBody' when calling NumberMaskingApi->CreateNumberMaskingCredentials");


            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingCredentialsBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .PostAsync<NumberMaskingCredentialsResponse>("/voice/masking/2/credentials", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("CreateNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Delete number masking configuration This method allows you to delete a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns></returns>
        public void DeleteNumberMaskingConfiguration(string key)
        {
            DeleteNumberMaskingConfigurationWithHttpInfo(key);
        }

        /// <summary>
        ///     Delete number masking configuration This method allows you to delete a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns>ApiResponse of object(void)</returns>
        public ApiResponse<object> DeleteNumberMaskingConfigurationWithHttpInfo(string key)
        {
            // verify the required parameter 'key' is set
            if (key == null)
                throw new ApiException(400,
                    "Missing required parameter 'key' when calling NumberMaskingApi->DeleteNumberMaskingConfiguration");

            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.PathParameters.Add("key", ClientUtils.ParameterToString(key)); // path parameter

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse =
                Client.Delete<object>("/voice/masking/2/config/{key}", localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("DeleteNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Delete number masking configuration This method allows you to delete a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async Task DeleteNumberMaskingConfigurationAsync(string key,
            CancellationToken cancellationToken = default)
        {
            await DeleteNumberMaskingConfigurationWithHttpInfoAsync(key, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        ///     Delete number masking configuration This method allows you to delete a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<ApiResponse<object>> DeleteNumberMaskingConfigurationWithHttpInfoAsync(string key,
            CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'key' is set
            if (key == null)
                throw new ApiException(400,
                    "Missing required parameter 'key' when calling NumberMaskingApi->DeleteNumberMaskingConfiguration");


            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.PathParameters.Add("key", ClientUtils.ParameterToString(key)); // path parameter

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient.DeleteAsync<object>("/voice/masking/2/config/{key}",
                localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("DeleteNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Delete number masking credentials This method allows you to delete Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns></returns>
        public void DeleteNumberMaskingCredentials()
        {
            DeleteNumberMaskingCredentialsWithHttpInfo();
        }

        /// <summary>
        ///     Delete number masking credentials This method allows you to delete Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of object(void)</returns>
        public ApiResponse<object> DeleteNumberMaskingCredentialsWithHttpInfo()
        {
            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);


            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse =
                Client.Delete<object>("/voice/masking/2/credentials", localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("DeleteNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Delete number masking credentials This method allows you to delete Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async Task DeleteNumberMaskingCredentialsAsync(CancellationToken cancellationToken = default)
        {
            await DeleteNumberMaskingCredentialsWithHttpInfoAsync(cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        ///     Delete number masking credentials This method allows you to delete Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async Task<ApiResponse<object>> DeleteNumberMaskingCredentialsWithHttpInfoAsync(
            CancellationToken cancellationToken = default)
        {
            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);


            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient.DeleteAsync<object>("/voice/masking/2/credentials",
                localVarRequestOptions, Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("DeleteNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Get number masking configuration This method allows you to get a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns>NumberMaskingSetupResponse</returns>
        public NumberMaskingSetupResponse GetNumberMaskingConfiguration(string key)
        {
            var localVarResponse = GetNumberMaskingConfigurationWithHttpInfo(key);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Get number masking configuration This method allows you to get a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <returns>ApiResponse of NumberMaskingSetupResponse</returns>
        public ApiResponse<NumberMaskingSetupResponse> GetNumberMaskingConfigurationWithHttpInfo(string key)
        {
            // verify the required parameter 'key' is set
            if (key == null)
                throw new ApiException(400,
                    "Missing required parameter 'key' when calling NumberMaskingApi->GetNumberMaskingConfiguration");

            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.PathParameters.Add("key", ClientUtils.ParameterToString(key)); // path parameter

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse = Client.Get<NumberMaskingSetupResponse>("/voice/masking/2/config/{key}",
                localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("GetNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Get number masking configuration This method allows you to get a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingSetupResponse</returns>
        public async Task<NumberMaskingSetupResponse> GetNumberMaskingConfigurationAsync(string key,
            CancellationToken cancellationToken = default)
        {
            var localVarResponse = await GetNumberMaskingConfigurationWithHttpInfoAsync(key, cancellationToken)
                .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Get number masking configuration This method allows you to get a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingSetupResponse)</returns>
        public async Task<ApiResponse<NumberMaskingSetupResponse>> GetNumberMaskingConfigurationWithHttpInfoAsync(
            string key, CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'key' is set
            if (key == null)
                throw new ApiException(400,
                    "Missing required parameter 'key' when calling NumberMaskingApi->GetNumberMaskingConfiguration");


            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.PathParameters.Add("key", ClientUtils.ParameterToString(key)); // path parameter

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .GetAsync<NumberMaskingSetupResponse>("/voice/masking/2/config/{key}", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("GetNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Get number masking configurations This method allows you to get all voice number masking configurations.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>List&lt;NumberMaskingSetupResponse&gt;</returns>
        public List<NumberMaskingSetupResponse> GetNumberMaskingConfigurations()
        {
            var localVarResponse = GetNumberMaskingConfigurationsWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Get number masking configurations This method allows you to get all voice number masking configurations.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of List&lt;NumberMaskingSetupResponse&gt;</returns>
        public ApiResponse<List<NumberMaskingSetupResponse>> GetNumberMaskingConfigurationsWithHttpInfo()
        {
            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);


            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse =
                Client.Get<List<NumberMaskingSetupResponse>>("/voice/masking/2/config", localVarRequestOptions,
                    Configuration);

            var exception = ExceptionFactory?.Invoke("GetNumberMaskingConfigurations", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Get number masking configurations This method allows you to get all voice number masking configurations.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;NumberMaskingSetupResponse&gt;</returns>
        public async Task<List<NumberMaskingSetupResponse>> GetNumberMaskingConfigurationsAsync(
            CancellationToken cancellationToken = default)
        {
            var localVarResponse = await GetNumberMaskingConfigurationsWithHttpInfoAsync(cancellationToken)
                .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Get number masking configurations This method allows you to get all voice number masking configurations.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;NumberMaskingSetupResponse&gt;)</returns>
        public async Task<ApiResponse<List<NumberMaskingSetupResponse>>>
            GetNumberMaskingConfigurationsWithHttpInfoAsync(CancellationToken cancellationToken = default)
        {
            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);


            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .GetAsync<List<NumberMaskingSetupResponse>>("/voice/masking/2/config", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("GetNumberMaskingConfigurations", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Get number masking credentials This method allows you to get Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>NumberMaskingCredentialsResponse</returns>
        public NumberMaskingCredentialsResponse GetNumberMaskingCredentials()
        {
            var localVarResponse = GetNumberMaskingCredentialsWithHttpInfo();
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Get number masking credentials This method allows you to get Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <returns>ApiResponse of NumberMaskingCredentialsResponse</returns>
        public ApiResponse<NumberMaskingCredentialsResponse> GetNumberMaskingCredentialsWithHttpInfo()
        {
            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);


            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse = Client.Get<NumberMaskingCredentialsResponse>("/voice/masking/2/credentials",
                localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("GetNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Get number masking credentials This method allows you to get Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingCredentialsResponse</returns>
        public async Task<NumberMaskingCredentialsResponse> GetNumberMaskingCredentialsAsync(
            CancellationToken cancellationToken = default)
        {
            var localVarResponse =
                await GetNumberMaskingCredentialsWithHttpInfoAsync(cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Get number masking credentials This method allows you to get Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingCredentialsResponse)</returns>
        public async Task<ApiResponse<NumberMaskingCredentialsResponse>> GetNumberMaskingCredentialsWithHttpInfoAsync(
            CancellationToken cancellationToken = default)
        {
            var localVarRequestOptions = new RequestOptions();

            string contentType = null;
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);


            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .GetAsync<NumberMaskingCredentialsResponse>("/voice/masking/2/credentials", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("GetNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Update number masking configuration This method allows you to update a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>NumberMaskingSetupResponse</returns>
        public NumberMaskingSetupResponse UpdateNumberMaskingConfiguration(string key,
            NumberMaskingSetupBody numberMaskingSetupBody)
        {
            var localVarResponse = UpdateNumberMaskingConfigurationWithHttpInfo(key, numberMaskingSetupBody);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Update number masking configuration This method allows you to update a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <returns>ApiResponse of NumberMaskingSetupResponse</returns>
        public ApiResponse<NumberMaskingSetupResponse> UpdateNumberMaskingConfigurationWithHttpInfo(string key,
            NumberMaskingSetupBody numberMaskingSetupBody)
        {
            // verify the required parameter 'key' is set
            if (key == null)
                throw new ApiException(400,
                    "Missing required parameter 'key' when calling NumberMaskingApi->UpdateNumberMaskingConfiguration");

            // verify the required parameter 'numberMaskingSetupBody' is set
            if (numberMaskingSetupBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingSetupBody' when calling NumberMaskingApi->UpdateNumberMaskingConfiguration");

            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.PathParameters.Add("key", ClientUtils.ParameterToString(key)); // path parameter
            localVarRequestOptions.Data = numberMaskingSetupBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse = Client.Put<NumberMaskingSetupResponse>("/voice/masking/2/config/{key}",
                localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("UpdateNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Update number masking configuration This method allows you to update a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingSetupResponse</returns>
        public async Task<NumberMaskingSetupResponse> UpdateNumberMaskingConfigurationAsync(string key,
            NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default)
        {
            var localVarResponse =
                await UpdateNumberMaskingConfigurationWithHttpInfoAsync(key, numberMaskingSetupBody, cancellationToken)
                    .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Update number masking configuration This method allows you to update a Voice number masking configuration.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="key">Masking configuration identifier.</param>
        /// <param name="numberMaskingSetupBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingSetupResponse)</returns>
        public async Task<ApiResponse<NumberMaskingSetupResponse>> UpdateNumberMaskingConfigurationWithHttpInfoAsync(
            string key, NumberMaskingSetupBody numberMaskingSetupBody, CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'key' is set
            if (key == null)
                throw new ApiException(400,
                    "Missing required parameter 'key' when calling NumberMaskingApi->UpdateNumberMaskingConfiguration");

            // verify the required parameter 'numberMaskingSetupBody' is set
            if (numberMaskingSetupBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingSetupBody' when calling NumberMaskingApi->UpdateNumberMaskingConfiguration");


            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.PathParameters.Add("key", ClientUtils.ParameterToString(key)); // path parameter
            localVarRequestOptions.Data = numberMaskingSetupBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .PutAsync<NumberMaskingSetupResponse>("/voice/masking/2/config/{key}", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("UpdateNumberMaskingConfiguration", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Update number masking credentials This method allows you to update Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>NumberMaskingCredentialsResponse</returns>
        public NumberMaskingCredentialsResponse UpdateNumberMaskingCredentials(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody)
        {
            var localVarResponse = UpdateNumberMaskingCredentialsWithHttpInfo(numberMaskingCredentialsBody);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Update number masking credentials This method allows you to update Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <returns>ApiResponse of NumberMaskingCredentialsResponse</returns>
        public ApiResponse<NumberMaskingCredentialsResponse> UpdateNumberMaskingCredentialsWithHttpInfo(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody)
        {
            // verify the required parameter 'numberMaskingCredentialsBody' is set
            if (numberMaskingCredentialsBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingCredentialsBody' when calling NumberMaskingApi->UpdateNumberMaskingCredentials");

            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingCredentialsBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse = Client.Put<NumberMaskingCredentialsResponse>("/voice/masking/2/credentials",
                localVarRequestOptions, Configuration);

            var exception = ExceptionFactory?.Invoke("UpdateNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Update number masking credentials This method allows you to update Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingCredentialsResponse</returns>
        public async Task<NumberMaskingCredentialsResponse> UpdateNumberMaskingCredentialsAsync(
            NumberMaskingCredentialsBody numberMaskingCredentialsBody, CancellationToken cancellationToken = default)
        {
            var localVarResponse =
                await UpdateNumberMaskingCredentialsWithHttpInfoAsync(numberMaskingCredentialsBody, cancellationToken)
                    .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Update number masking credentials This method allows you to update Voice number masking credentials.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingCredentialsBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingCredentialsResponse)</returns>
        public async Task<ApiResponse<NumberMaskingCredentialsResponse>>
            UpdateNumberMaskingCredentialsWithHttpInfoAsync(NumberMaskingCredentialsBody numberMaskingCredentialsBody,
                CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'numberMaskingCredentialsBody' is set
            if (numberMaskingCredentialsBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingCredentialsBody' when calling NumberMaskingApi->UpdateNumberMaskingCredentials");


            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingCredentialsBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .PutAsync<NumberMaskingCredentialsResponse>("/voice/masking/2/credentials", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("UpdateNumberMaskingCredentials", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Upload audio files This method allows uploading audio files that can be used on Infobip Voice platform. The method
        ///     accepts either a URL or an uploaded audio file in the request body. Using both or neither will cause the request to
        ///     be rejected.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <returns>NumberMaskingUploadResponse</returns>
        public NumberMaskingUploadResponse UploadAudioFiles(NumberMaskingUploadBody numberMaskingUploadBody)
        {
            var localVarResponse = UploadAudioFilesWithHttpInfo(numberMaskingUploadBody);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Upload audio files This method allows uploading audio files that can be used on Infobip Voice platform. The method
        ///     accepts either a URL or an uploaded audio file in the request body. Using both or neither will cause the request to
        ///     be rejected.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <returns>ApiResponse of NumberMaskingUploadResponse</returns>
        public ApiResponse<NumberMaskingUploadResponse> UploadAudioFilesWithHttpInfo(
            NumberMaskingUploadBody numberMaskingUploadBody)
        {
            // verify the required parameter 'numberMaskingUploadBody' is set
            if (numberMaskingUploadBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingUploadBody' when calling NumberMaskingApi->UploadAudioFiles");

            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingUploadBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request
            var localVarResponse =
                Client.Post<NumberMaskingUploadResponse>("/voice/masking/1/upload", localVarRequestOptions,
                    Configuration);

            var exception = ExceptionFactory?.Invoke("UploadAudioFiles", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Upload audio files This method allows uploading audio files that can be used on Infobip Voice platform. The method
        ///     accepts either a URL or an uploaded audio file in the request body. Using both or neither will cause the request to
        ///     be rejected.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of NumberMaskingUploadResponse</returns>
        public async Task<NumberMaskingUploadResponse> UploadAudioFilesAsync(
            NumberMaskingUploadBody numberMaskingUploadBody, CancellationToken cancellationToken = default)
        {
            var localVarResponse = await UploadAudioFilesWithHttpInfoAsync(numberMaskingUploadBody, cancellationToken)
                .ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        ///     Upload audio files This method allows uploading audio files that can be used on Infobip Voice platform. The method
        ///     accepts either a URL or an uploaded audio file in the request body. Using both or neither will cause the request to
        ///     be rejected.
        /// </summary>
        /// <exception cref="ApiException">Thrown when fails to make API call</exception>
        /// <param name="numberMaskingUploadBody"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (NumberMaskingUploadResponse)</returns>
        public async Task<ApiResponse<NumberMaskingUploadResponse>> UploadAudioFilesWithHttpInfoAsync(
            NumberMaskingUploadBody numberMaskingUploadBody, CancellationToken cancellationToken = default)
        {
            // verify the required parameter 'numberMaskingUploadBody' is set
            if (numberMaskingUploadBody == null)
                throw new ApiException(400,
                    "Missing required parameter 'numberMaskingUploadBody' when calling NumberMaskingApi->UploadAudioFiles");


            var localVarRequestOptions = new RequestOptions();

            var contentType = "application/json";
            if (contentType != null)
                localVarRequestOptions.HeaderParameters.Add("Content-Type", contentType);

            var accept = "application/json";
            if (accept != null)
                localVarRequestOptions.HeaderParameters.Add("Accept", accept);

            localVarRequestOptions.Data = numberMaskingUploadBody;

            // authentication (APIKeyHeader) required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
                localVarRequestOptions.HeaderParameters.Add("Authorization", Configuration.ApiKeyWithPrefix);

            // make the HTTP request

            var localVarResponse = await AsynchronousClient
                .PostAsync<NumberMaskingUploadResponse>("/voice/masking/1/upload", localVarRequestOptions,
                    Configuration, cancellationToken).ConfigureAwait(false);

            var exception = ExceptionFactory?.Invoke("UploadAudioFiles", localVarResponse);
            if (exception != null)
                throw exception;

            return localVarResponse;
        }

        /// <summary>
        ///     Disposes ApiClient if it exists.
        /// </summary>
        public void Dispose()
        {
            ApiClient?.Dispose();
        }
    }
}