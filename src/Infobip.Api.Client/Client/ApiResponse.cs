/*
 * Infobip Client API Libraries OpenAPI Specification
 * OpenAPI specification containing public endpoints supported in client API libraries.
 *
 * Contact: support@infobip.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using System.Net;

namespace Infobip.Api.Client
{
    /// <summary>
    ///     Provides a non-generic contract for the ApiResponse wrapper.
    /// </summary>
    public interface IApiResponse
    {
        /// <summary>
        ///     The content of this response.
        /// </summary>
        object Content { get; }

        /// <summary>
        ///     Gets or sets any cookies passed along on the response.
        /// </summary>
        IEnumerable<Cookie> Cookies { get; set; }

        /// <summary>
        ///     Gets or sets any error text defined by the calling client.
        /// </summary>
        string ErrorText { get; set; }

        /// <summary>
        ///     Gets or sets the HTTP headers.
        /// </summary>
        /// <value>HTTP headers</value>
        Multimap<string, string> Headers { get; }

        /// <summary>
        ///     The raw content of this response.
        /// </summary>
        string RawContent { get; }

        /// <summary>
        ///     The data type of <see cref="Content" />.
        /// </summary>
        Type ResponseType { get; }

        /// <summary>
        ///     Gets or sets the status code (HTTP status code).
        /// </summary>
        /// <value>The status code.</value>
        HttpStatusCode StatusCode { get; }
    }

    /// <summary>
    ///     API Response
    /// </summary>
    public class ApiResponse<T> : IApiResponse
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
        /// </summary>
        /// <param name="statusCode">HTTP status code.</param>
        /// <param name="headers">HTTP headers.</param>
        /// <param name="data">Data (parsed HTTP body)</param>
        /// <param name="rawContent">Raw content.</param>
        public ApiResponse(HttpStatusCode statusCode, Multimap<string, string> headers, T data, string rawContent)
        {
            StatusCode = statusCode;
            Headers = headers;
            Data = data;
            RawContent = rawContent;
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
        /// </summary>
        /// <param name="statusCode">HTTP status code.</param>
        /// <param name="headers">HTTP headers.</param>
        /// <param name="data">Data (parsed HTTP body)</param>
        public ApiResponse(HttpStatusCode statusCode, Multimap<string, string> headers, T data) : this(statusCode,
            headers, data, null)
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
        /// </summary>
        /// <param name="statusCode">HTTP status code.</param>
        /// <param name="data">Data (parsed HTTP body)</param>
        /// <param name="rawContent">Raw content.</param>
        public ApiResponse(HttpStatusCode statusCode, T data, string rawContent) : this(statusCode, null, data,
            rawContent)
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="ApiResponse{T}" /> class.
        /// </summary>
        /// <param name="statusCode">HTTP status code.</param>
        /// <param name="data">Data (parsed HTTP body)</param>
        public ApiResponse(HttpStatusCode statusCode, T data) : this(statusCode, data, null)
        {
        }

        /// <summary>
        ///     Gets or sets the data (parsed HTTP body).
        /// </summary>
        /// <value>The data.</value>
        public T Data { get; }

        /// <summary>
        ///     The data type of <see cref="Content" />.
        /// </summary>
        public object Content => Data;

        /// <summary>
        ///     Gets or sets any cookies passed along on the response.
        /// </summary>
        public IEnumerable<Cookie> Cookies { get; set; }

        /// <summary>
        ///     Gets or sets any error text defined by the calling client.
        /// </summary>
        public string ErrorText { get; set; }

        /// <summary>
        ///     Gets or sets the HTTP headers.
        /// </summary>
        /// <value>HTTP headers</value>
        public Multimap<string, string> Headers { get; }

        /// <summary>
        ///     The raw content
        /// </summary>
        public string RawContent { get; }

        /// <summary>
        ///     The content of this response.
        /// </summary>
        public Type ResponseType => typeof(T);

        /// <summary>
        ///     Gets or sets the status code (HTTP status code).
        /// </summary>
        /// <value>The status code.</value>
        public HttpStatusCode StatusCode { get; }
    }
}